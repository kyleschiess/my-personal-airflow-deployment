[2024-01-13T18:44:23.734+0000] {taskinstance.py:1957} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: fdic_ncua_metrics.create_metrics_bank_cu_asset_dep manual__2024-01-13T18:44:22.752906+00:00 [queued]>
[2024-01-13T18:44:23.742+0000] {taskinstance.py:1957} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: fdic_ncua_metrics.create_metrics_bank_cu_asset_dep manual__2024-01-13T18:44:22.752906+00:00 [queued]>
[2024-01-13T18:44:23.742+0000] {taskinstance.py:2171} INFO - Starting attempt 1 of 1
[2024-01-13T18:44:23.750+0000] {taskinstance.py:2192} INFO - Executing <Task(PostgresOperator): create_metrics_bank_cu_asset_dep> on 2024-01-13 18:44:22.752906+00:00
[2024-01-13T18:44:23.754+0000] {standard_task_runner.py:60} INFO - Started process 3762 to run task
[2024-01-13T18:44:23.758+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'fdic_ncua_metrics', 'create_metrics_bank_cu_asset_dep', 'manual__2024-01-13T18:44:22.752906+00:00', '--job-id', '274', '--raw', '--subdir', 'DAGS_FOLDER/fdic-ncua-metrics.py', '--cfg-path', '/tmp/tmpbmedlwmm']
[2024-01-13T18:44:23.759+0000] {standard_task_runner.py:88} INFO - Job 274: Subtask create_metrics_bank_cu_asset_dep
[2024-01-13T18:44:23.787+0000] {task_command.py:423} INFO - Running <TaskInstance: fdic_ncua_metrics.create_metrics_bank_cu_asset_dep manual__2024-01-13T18:44:22.752906+00:00 [running]> on host c111cf247bc6
[2024-01-13T18:44:23.823+0000] {taskinstance.py:2481} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='fdic_ncua_metrics' AIRFLOW_CTX_TASK_ID='create_metrics_bank_cu_asset_dep' AIRFLOW_CTX_EXECUTION_DATE='2024-01-13T18:44:22.752906+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-01-13T18:44:22.752906+00:00'
[2024-01-13T18:44:23.824+0000] {sql.py:276} INFO - Executing: DROP TABLE IF EXISTS metrics.bank_cu_asset_dep;
CREATE TABLE metrics.bank_cu_asset_dep (
    -- pulling from data_marts.fdic_banks and data_marts.ncua_credit_unions
    inst_type TEXT,
    id_number NUMERIC,
    name TEXT,
    city TEXT,
    state TEXT,
    state_code TEXT,
    total_assets NUMERIC,
    total_deposits NUMERIC,
    report_date DATE,
    asset_tier TEXT,
    deposits_growth_prev_qtr NUMERIC,
    deposits_growth_prev_qtr_tier TEXT
);

INSERT INTO metrics.bank_cu_asset_dep (
    WITH fdic AS (
        SELECT
            'bank' AS inst_type,
            cert AS id_number,
            name,
            city,
            state,
            state_code,
            total_assets,
            total_deposits,
            report_date::DATE
        FROM data_marts.fdic_banks
    ),

    ncua AS (
        SELECT
            'credit union' AS inst_type,
            cu_number AS id_number,
            name,
            city,
            state,
            state_code,
            total_assets,
            total_deposits,
            report_date::DATE
        FROM data_marts.ncua_credit_unions
    ),

    u_all AS (
        SELECT
            *
        FROM fdic
        UNION ALL
        SELECT
            *
        FROM ncua
    ),

    metrics AS (
        SELECT
            *,
            CASE
                WHEN total_assets < 500000000 THEN 'Less than $500M'
                WHEN total_assets < 1000000000 THEN '$500M to $1B'
                WHEN total_assets < 5000000000 THEN '$1B to $5B'
                WHEN total_assets < 10000000000 THEN '$5B to $10B'
                WHEN total_assets < 50000000000 THEN '$10B to $50B'
                WHEN total_assets < 100000000000 THEN '$50B to $100B'
                WHEN total_assets < 500000000000 THEN '$100B to $500B'
                ELSE 'Greater than $500B'
            END AS asset_tier,
            CASE
                WHEN total_deposits = 0 THEN 0
                ELSE (total_deposits - LAG(total_deposits, 1) OVER (PARTITION BY id_number, inst_type ORDER BY report_date)) / total_deposits
            END AS deposits_growth_prev_qtr
        FROM u_all
    )

    SELECT
        *,
        CASE
            WHEN deposits_growth_prev_qtr <= -0.05 THEN '>5% decline'
            WHEN deposits_growth_prev_qtr <= 0 THEN '0% to 5% decline'
            WHEN deposits_growth_prev_qtr <= 0.05 THEN '0% to 5% growth'
            WHEN deposits_growth_prev_qtr >= 0.05 THEN '>5% growth'
            ELSE NULL
        END AS deposits_growth_prev_qtr_tier
    FROM metrics
);
[2024-01-13T18:44:23.828+0000] {base.py:83} INFO - Using connection ID 'alpharank_de_eval' for task execution.
[2024-01-13T18:44:23.833+0000] {base.py:83} INFO - Using connection ID 'alpharank_de_eval' for task execution.
[2024-01-13T18:44:24.108+0000] {sql.py:432} INFO - Running statement: DROP TABLE IF EXISTS metrics.bank_cu_asset_dep;
CREATE TABLE metrics.bank_cu_asset_dep (
    -- pulling from data_marts.fdic_banks and data_marts.ncua_credit_unions
    inst_type TEXT,
    id_number NUMERIC,
    name TEXT,
    city TEXT,
    state TEXT,
    state_code TEXT,
    total_assets NUMERIC,
    total_deposits NUMERIC,
    report_date DATE,
    asset_tier TEXT,
    deposits_growth_prev_qtr NUMERIC,
    deposits_growth_prev_qtr_tier TEXT
);

INSERT INTO metrics.bank_cu_asset_dep (
    WITH fdic AS (
        SELECT
            'bank' AS inst_type,
            cert AS id_number,
            name,
            city,
            state,
            state_code,
            total_assets,
            total_deposits,
            report_date::DATE
        FROM data_marts.fdic_banks
    ),

    ncua AS (
        SELECT
            'credit union' AS inst_type,
            cu_number AS id_number,
            name,
            city,
            state,
            state_code,
            total_assets,
            total_deposits,
            report_date::DATE
        FROM data_marts.ncua_credit_unions
    ),

    u_all AS (
        SELECT
            *
        FROM fdic
        UNION ALL
        SELECT
            *
        FROM ncua
    ),

    metrics AS (
        SELECT
            *,
            CASE
                WHEN total_assets < 500000000 THEN 'Less than $500M'
                WHEN total_assets < 1000000000 THEN '$500M to $1B'
                WHEN total_assets < 5000000000 THEN '$1B to $5B'
                WHEN total_assets < 10000000000 THEN '$5B to $10B'
                WHEN total_assets < 50000000000 THEN '$10B to $50B'
                WHEN total_assets < 100000000000 THEN '$50B to $100B'
                WHEN total_assets < 500000000000 THEN '$100B to $500B'
                ELSE 'Greater than $500B'
            END AS asset_tier,
            CASE
                WHEN total_deposits = 0 THEN 0
                ELSE (total_deposits - LAG(total_deposits, 1) OVER (PARTITION BY id_number, inst_type ORDER BY report_date)) / total_deposits
            END AS deposits_growth_prev_qtr
        FROM u_all
    )

    SELECT
        *,
        CASE
            WHEN deposits_growth_prev_qtr <= -0.05 THEN '>5% decline'
            WHEN deposits_growth_prev_qtr <= 0 THEN '0% to 5% decline'
            WHEN deposits_growth_prev_qtr <= 0.05 THEN '0% to 5% growth'
            WHEN deposits_growth_prev_qtr >= 0.05 THEN '>5% growth'
            ELSE NULL
        END AS deposits_growth_prev_qtr_tier
    FROM metrics
);, parameters: None
[2024-01-13T18:44:24.368+0000] {sql.py:441} INFO - Rows affected: 38122
[2024-01-13T18:44:24.482+0000] {taskinstance.py:1138} INFO - Marking task as SUCCESS. dag_id=fdic_ncua_metrics, task_id=create_metrics_bank_cu_asset_dep, execution_date=20240113T184422, start_date=20240113T184423, end_date=20240113T184424
[2024-01-13T18:44:24.536+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2024-01-13T18:44:24.549+0000] {taskinstance.py:3281} INFO - 0 downstream tasks scheduled from follow-on schedule check
