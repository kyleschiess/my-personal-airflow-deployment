[2024-01-12T20:53:54.403+0000] {taskinstance.py:1957} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: fdic_ncua_staging.create_staging_ncua_fs220_temp manual__2024-01-12T20:53:53.512499+00:00 [queued]>
[2024-01-12T20:53:54.411+0000] {taskinstance.py:1957} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: fdic_ncua_staging.create_staging_ncua_fs220_temp manual__2024-01-12T20:53:53.512499+00:00 [queued]>
[2024-01-12T20:53:54.412+0000] {taskinstance.py:2171} INFO - Starting attempt 1 of 1
[2024-01-12T20:53:54.421+0000] {taskinstance.py:2192} INFO - Executing <Task(PostgresOperator): create_staging_ncua_fs220_temp> on 2024-01-12 20:53:53.512499+00:00
[2024-01-12T20:53:54.425+0000] {standard_task_runner.py:60} INFO - Started process 9662 to run task
[2024-01-12T20:53:54.429+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'fdic_ncua_staging', 'create_staging_ncua_fs220_temp', 'manual__2024-01-12T20:53:53.512499+00:00', '--job-id', '113', '--raw', '--subdir', 'DAGS_FOLDER/fdic-ncua-staging.py', '--cfg-path', '/tmp/tmp3fpijgcp']
[2024-01-12T20:53:54.431+0000] {standard_task_runner.py:88} INFO - Job 113: Subtask create_staging_ncua_fs220_temp
[2024-01-12T20:53:54.471+0000] {task_command.py:423} INFO - Running <TaskInstance: fdic_ncua_staging.create_staging_ncua_fs220_temp manual__2024-01-12T20:53:53.512499+00:00 [running]> on host c111cf247bc6
[2024-01-12T20:53:54.513+0000] {taskinstance.py:2481} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='fdic_ncua_staging' AIRFLOW_CTX_TASK_ID='create_staging_ncua_fs220_temp' AIRFLOW_CTX_EXECUTION_DATE='2024-01-12T20:53:53.512499+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-01-12T20:53:53.512499+00:00'
[2024-01-12T20:53:54.513+0000] {sql.py:276} INFO - Executing: CREATE TABLE staging.ncua_fs220_temp (
    -- pulling from raw.ncua_fs220
    cu_number NUMERIC, -- NCUA Charter Number
    cycle_date TEXT, -- `cycle_date`: Quarterly Report Date
    update_date TEXT,  -- `update_date`: The date this record was last updated in the NCUA DB
    -- right now, we care about acct_010 and acct_018
    total_assets NUMERIC, -- `acct_010`: Total Assets
    total_deposits NUMERIC, -- `acct_018`: Total Deposits
    dim_id TEXT PRIMARY KEY, -- MD5 hash of cu_number, cycle_date, update_date, total_assets, and total_deposits
    loaded_at TIMESTAMP WITH TIME ZONE -- The date the most up-to-date version of this record was loaded into the table
    --created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

INSERT INTO staging.ncua_fs220_temp (
    WITH cte1 AS (
        SELECT
            cu_number,
            cycle_date,
            update_date,
            acct_010,
            acct_018,
            scraped_at,
            -- get scraped_at and convert to YYYYMMDD format
            to_char(scraped_at, 'YYYYMMDD') AS day_scraped_at
        FROM raw.ncua_fs220
    ),

    -- staging will contain one version of each institution for whatever date it was scraped on
    cte2 AS (
        SELECT
            cu_number,
            cycle_date,
            update_date,
            acct_010,
            acct_018,
            day_scraped_at AS scraped_at
        FROM cte1
        GROUP BY
            cu_number,
            cycle_date,
            update_date,
            acct_010,
            acct_018,
            day_scraped_at
    )

    SELECT
        cu_number::NUMERIC,
        cycle_date,
        update_date,
        acct_010::NUMERIC as total_assets,
        acct_018::NUMERIC as total_deposits,
        md5(
            cu_number::TEXT || cycle_date || update_date || acct_010::TEXT || acct_018::TEXT || scraped_at
        ) AS dim_id,
        NOW()::TIMESTAMP WITH TIME ZONE AS loaded_at,
        scraped_at::DATE AS scraped_at
    FROM cte2
);
[2024-01-12T20:53:54.519+0000] {base.py:83} INFO - Using connection ID 'alpharank_de_eval' for task execution.
[2024-01-12T20:53:54.525+0000] {base.py:83} INFO - Using connection ID 'alpharank_de_eval' for task execution.
[2024-01-12T20:53:54.819+0000] {sql.py:432} INFO - Running statement: CREATE TABLE staging.ncua_fs220_temp (
    -- pulling from raw.ncua_fs220
    cu_number NUMERIC, -- NCUA Charter Number
    cycle_date TEXT, -- `cycle_date`: Quarterly Report Date
    update_date TEXT,  -- `update_date`: The date this record was last updated in the NCUA DB
    -- right now, we care about acct_010 and acct_018
    total_assets NUMERIC, -- `acct_010`: Total Assets
    total_deposits NUMERIC, -- `acct_018`: Total Deposits
    dim_id TEXT PRIMARY KEY, -- MD5 hash of cu_number, cycle_date, update_date, total_assets, and total_deposits
    loaded_at TIMESTAMP WITH TIME ZONE -- The date the most up-to-date version of this record was loaded into the table
    --created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

INSERT INTO staging.ncua_fs220_temp (
    WITH cte1 AS (
        SELECT
            cu_number,
            cycle_date,
            update_date,
            acct_010,
            acct_018,
            scraped_at,
            -- get scraped_at and convert to YYYYMMDD format
            to_char(scraped_at, 'YYYYMMDD') AS day_scraped_at
        FROM raw.ncua_fs220
    ),

    -- staging will contain one version of each institution for whatever date it was scraped on
    cte2 AS (
        SELECT
            cu_number,
            cycle_date,
            update_date,
            acct_010,
            acct_018,
            day_scraped_at AS scraped_at
        FROM cte1
        GROUP BY
            cu_number,
            cycle_date,
            update_date,
            acct_010,
            acct_018,
            day_scraped_at
    )

    SELECT
        cu_number::NUMERIC,
        cycle_date,
        update_date,
        acct_010::NUMERIC as total_assets,
        acct_018::NUMERIC as total_deposits,
        md5(
            cu_number::TEXT || cycle_date || update_date || acct_010::TEXT || acct_018::TEXT || scraped_at
        ) AS dim_id,
        NOW()::TIMESTAMP WITH TIME ZONE AS loaded_at,
        scraped_at::DATE AS scraped_at
    FROM cte2
);, parameters: None
[2024-01-12T20:53:54.917+0000] {taskinstance.py:2699} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 433, in _execute_task
    result = execute_callable(context=context, **execute_callable_kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/operators/sql.py", line 282, in execute
    output = hook.run(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/hooks/sql.py", line 392, in run
    self._run_command(cur, sql_statement, parameters)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/common/sql/hooks/sql.py", line 437, in _run_command
    cur.execute(sql_statement)
psycopg2.errors.SyntaxError: INSERT has more expressions than target columns
LINE 57:         scraped_at::DATE AS scraped_at
                 ^

[2024-01-12T20:53:54.936+0000] {taskinstance.py:1138} INFO - Marking task as FAILED. dag_id=fdic_ncua_staging, task_id=create_staging_ncua_fs220_temp, execution_date=20240112T205353, start_date=20240112T205354, end_date=20240112T205354
[2024-01-12T20:53:54.953+0000] {standard_task_runner.py:107} ERROR - Failed to execute job 113 for task create_staging_ncua_fs220_temp (INSERT has more expressions than target columns
LINE 57:         scraped_at::DATE AS scraped_at
                 ^
; 9662)
[2024-01-12T20:53:54.970+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 1
[2024-01-12T20:53:54.990+0000] {taskinstance.py:3281} INFO - 0 downstream tasks scheduled from follow-on schedule check
